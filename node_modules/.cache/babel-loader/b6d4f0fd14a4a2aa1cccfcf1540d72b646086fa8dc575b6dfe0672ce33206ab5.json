{"ast":null,"code":"import React,{createContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const login=async(email,password)=>{if(email==='test@example.com'&&password==='password'){setIsAuthenticated(true);return true;}return false;};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{login,isAuthenticated},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","login","email","password","Provider","value"],"sources":["C:/Users/SEC/Documents/SEMESTER 5/PEC/Dehealth-records-management-system/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const login = async (email, password) => {\r\n        if (email === 'test@example.com' && password === 'password') {\r\n            setIsAuthenticated(true);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ login, isAuthenticated }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,WAAW,cAAGJ,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAK,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAE7D,KAAM,CAAAS,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACrC,GAAID,KAAK,GAAK,kBAAkB,EAAIC,QAAQ,GAAK,UAAU,CAAE,CACzDH,kBAAkB,CAAC,IAAI,CAAC,CACxB,MAAO,KAAI,CACf,CACA,MAAO,MAAK,CAChB,CAAC,CAED,mBACIN,IAAA,CAACC,WAAW,CAACS,QAAQ,EAACC,KAAK,CAAE,CAAEJ,KAAK,CAAEF,eAAgB,CAAE,CAAAD,QAAA,CACnDA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}