{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SEC\\\\Documents\\\\SEMESTER 5\\\\PEC\\\\Dehealth-records-management-system\\\\src\\\\components\\\\TransferPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/TransferPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransferPage = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState('');\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch patients and doctors from the API\n    const fetchData = async () => {\n      try {\n        const patientResponse = await fetch('/api/patients');\n        const doctorResponse = await fetch('/api/doctors');\n        const patientData = await patientResponse.json();\n        const doctorData = await doctorResponse.json();\n        setPatients(patientData);\n        setDoctors(doctorData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleTransfer = async e => {\n    e.preventDefault();\n    if (!selectedPatient || !selectedDoctor) {\n      setMessage('Please select both a patient and a doctor.');\n      return;\n    }\n    try {\n      const response = await fetch('/api/transfer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          patientId: selectedPatient,\n          doctorId: selectedDoctor\n        })\n      });\n      if (response.ok) {\n        setMessage('Patient successfully transferred.');\n        setSelectedPatient('');\n        setSelectedDoctor('');\n      } else {\n        const data = await response.json();\n        setMessage(data.message || 'Transfer failed.');\n      }\n    } catch (error) {\n      setMessage('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transfer Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTransfer,\n      className: \"transfer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"patient\",\n          children: \"Select Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"patient\",\n          value: selectedPatient,\n          onChange: e => setSelectedPatient(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Patient --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), patients.map(patient => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: patient.id,\n            children: patient.name\n          }, patient.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"doctor\",\n          children: \"Select Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"doctor\",\n          value: selectedDoctor,\n          onChange: e => setSelectedDoctor(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Doctor --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: doctor.id,\n            children: doctor.name\n          }, doctor.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"transfer-button\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(TransferPage, \"r/qHwPUvivejowQAjfWxhyC0uqQ=\");\n_c = TransferPage;\nexport default TransferPage;\nvar _c;\n$RefreshReg$(_c, \"TransferPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TransferPage","_s","patients","setPatients","selectedPatient","setSelectedPatient","doctors","setDoctors","selectedDoctor","setSelectedDoctor","message","setMessage","fetchData","patientResponse","fetch","doctorResponse","patientData","json","doctorData","error","console","handleTransfer","e","preventDefault","response","method","headers","body","JSON","stringify","patientId","doctorId","ok","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","target","map","patient","name","doctor","type","_c","$RefreshReg$"],"sources":["C:/Users/SEC/Documents/SEMESTER 5/PEC/Dehealth-records-management-system/src/components/TransferPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/TransferPage.css';\r\n\r\nconst TransferPage = () => {\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState('');\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch patients and doctors from the API\r\n        const fetchData = async () => {\r\n            try {\r\n                const patientResponse = await fetch('/api/patients');\r\n                const doctorResponse = await fetch('/api/doctors');\r\n                const patientData = await patientResponse.json();\r\n                const doctorData = await doctorResponse.json();\r\n                setPatients(patientData);\r\n                setDoctors(doctorData);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleTransfer = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!selectedPatient || !selectedDoctor) {\r\n            setMessage('Please select both a patient and a doctor.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('/api/transfer', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ patientId: selectedPatient, doctorId: selectedDoctor }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setMessage('Patient successfully transferred.');\r\n                setSelectedPatient('');\r\n                setSelectedDoctor('');\r\n            } else {\r\n                const data = await response.json();\r\n                setMessage(data.message || 'Transfer failed.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"transfer-container\">\r\n            <h1>Transfer Patient</h1>\r\n            <form onSubmit={handleTransfer} className=\"transfer-form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"patient\">Select Patient</label>\r\n                    <select\r\n                        id=\"patient\"\r\n                        value={selectedPatient}\r\n                        onChange={(e) => setSelectedPatient(e.target.value)}\r\n                    >\r\n                        <option value=\"\">-- Select a Patient --</option>\r\n                        {patients.map((patient) => (\r\n                            <option key={patient.id} value={patient.id}>\r\n                                {patient.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"doctor\">Select Doctor</label>\r\n                    <select\r\n                        id=\"doctor\"\r\n                        value={selectedDoctor}\r\n                        onChange={(e) => setSelectedDoctor(e.target.value)}\r\n                    >\r\n                        <option value=\"\">-- Select a Doctor --</option>\r\n                        {doctors.map((doctor) => (\r\n                            <option key={doctor.id} value={doctor.id}>\r\n                                {doctor.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {message && <div className=\"message\">{message}</div>}\r\n                <button type=\"submit\" className=\"transfer-button\">Transfer</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransferPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}