{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../styles/TransferPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TransferPage=()=>{const[patients,setPatients]=useState([]);const[selectedPatient,setSelectedPatient]=useState('');const[doctors,setDoctors]=useState([]);const[selectedDoctor,setSelectedDoctor]=useState('');const[message,setMessage]=useState('');useEffect(()=>{// Fetch patients and doctors from the API\nconst fetchData=async()=>{try{const patientResponse=await fetch('/api/patients');const doctorResponse=await fetch('/api/doctors');const patientData=await patientResponse.json();const doctorData=await doctorResponse.json();setPatients(patientData);setDoctors(doctorData);}catch(error){console.error('Error fetching data:',error);}};fetchData();},[]);const handleTransfer=async e=>{e.preventDefault();if(!selectedPatient||!selectedDoctor){setMessage('Please select both a patient and a doctor.');return;}try{const response=await fetch('/api/transfer',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({patientId:selectedPatient,doctorId:selectedDoctor})});if(response.ok){setMessage('Patient successfully transferred.');setSelectedPatient('');setSelectedDoctor('');}else{const data=await response.json();setMessage(data.message||'Transfer failed.');}}catch(error){setMessage('An error occurred. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"transfer-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Transfer Patient\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleTransfer,className:\"transfer-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"patient\",children:\"Select Patient\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"patient\",value:selectedPatient,onChange:e=>setSelectedPatient(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Select a Patient --\"}),patients.map(patient=>/*#__PURE__*/_jsx(\"option\",{value:patient.id,children:patient.name},patient.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"doctor\",children:\"Select Doctor\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"doctor\",value:selectedDoctor,onChange:e=>setSelectedDoctor(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"-- Select a Doctor --\"}),doctors.map(doctor=>/*#__PURE__*/_jsx(\"option\",{value:doctor.id,children:doctor.name},doctor.id))]})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"message\",children:message}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"transfer-button\",children:\"Transfer\"})]})]});};export default TransferPage;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TransferPage","patients","setPatients","selectedPatient","setSelectedPatient","doctors","setDoctors","selectedDoctor","setSelectedDoctor","message","setMessage","fetchData","patientResponse","fetch","doctorResponse","patientData","json","doctorData","error","console","handleTransfer","e","preventDefault","response","method","headers","body","JSON","stringify","patientId","doctorId","ok","data","className","children","onSubmit","htmlFor","id","value","onChange","target","map","patient","name","doctor","type"],"sources":["C:/Users/SEC/Documents/SEMESTER 5/PEC/Dehealth-records-management-system/src/components/TransferPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/TransferPage.css';\r\n\r\nconst TransferPage = () => {\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState('');\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Fetch patients and doctors from the API\r\n        const fetchData = async () => {\r\n            try {\r\n                const patientResponse = await fetch('/api/patients');\r\n                const doctorResponse = await fetch('/api/doctors');\r\n                const patientData = await patientResponse.json();\r\n                const doctorData = await doctorResponse.json();\r\n                setPatients(patientData);\r\n                setDoctors(doctorData);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleTransfer = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!selectedPatient || !selectedDoctor) {\r\n            setMessage('Please select both a patient and a doctor.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('/api/transfer', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ patientId: selectedPatient, doctorId: selectedDoctor }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setMessage('Patient successfully transferred.');\r\n                setSelectedPatient('');\r\n                setSelectedDoctor('');\r\n            } else {\r\n                const data = await response.json();\r\n                setMessage(data.message || 'Transfer failed.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('An error occurred. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"transfer-container\">\r\n            <h1>Transfer Patient</h1>\r\n            <form onSubmit={handleTransfer} className=\"transfer-form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"patient\">Select Patient</label>\r\n                    <select\r\n                        id=\"patient\"\r\n                        value={selectedPatient}\r\n                        onChange={(e) => setSelectedPatient(e.target.value)}\r\n                    >\r\n                        <option value=\"\">-- Select a Patient --</option>\r\n                        {patients.map((patient) => (\r\n                            <option key={patient.id} value={patient.id}>\r\n                                {patient.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"doctor\">Select Doctor</label>\r\n                    <select\r\n                        id=\"doctor\"\r\n                        value={selectedDoctor}\r\n                        onChange={(e) => setSelectedDoctor(e.target.value)}\r\n                    >\r\n                        <option value=\"\">-- Select a Doctor --</option>\r\n                        {doctors.map((doctor) => (\r\n                            <option key={doctor.id} value={doctor.id}>\r\n                                {doctor.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                {message && <div className=\"message\">{message}</div>}\r\n                <button type=\"submit\" className=\"transfer-button\">Transfer</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TransferPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}